package ro.barata.mps.javascriptLanguage.structure;

/*Generated by MPS */

import java.util.List;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.internal.collections.runtime.backports.LinkedList;

public enum JavascriptBinaryCondition {
  _1("<", "<"),
  _2("<=", "<="),
  _3(">", ">"),
  _4(">=", ">="),
  _5("==", "=="),
  _6("!=", "!=");

  private String myName;
  public String getName() {
    return this.myName;
  }
  public String getValueAsString() {
    return this.myValue;
  }
  public static List<JavascriptBinaryCondition> getConstants() {
    List<JavascriptBinaryCondition> list = ListSequence.fromList(new LinkedList<JavascriptBinaryCondition>());
    ListSequence.fromList(list).addElement(JavascriptBinaryCondition._1);
    ListSequence.fromList(list).addElement(JavascriptBinaryCondition._2);
    ListSequence.fromList(list).addElement(JavascriptBinaryCondition._3);
    ListSequence.fromList(list).addElement(JavascriptBinaryCondition._4);
    ListSequence.fromList(list).addElement(JavascriptBinaryCondition._5);
    ListSequence.fromList(list).addElement(JavascriptBinaryCondition._6);
    return list;
  }
  public static JavascriptBinaryCondition getDefault() {
    return JavascriptBinaryCondition._5;
  }
  public static JavascriptBinaryCondition parseValue(String value) {
    if (value == null) {
      return JavascriptBinaryCondition.getDefault();
    }
    if (value.equals(JavascriptBinaryCondition._1.getValueAsString())) {
      return JavascriptBinaryCondition._1;
    }
    if (value.equals(JavascriptBinaryCondition._2.getValueAsString())) {
      return JavascriptBinaryCondition._2;
    }
    if (value.equals(JavascriptBinaryCondition._3.getValueAsString())) {
      return JavascriptBinaryCondition._3;
    }
    if (value.equals(JavascriptBinaryCondition._4.getValueAsString())) {
      return JavascriptBinaryCondition._4;
    }
    if (value.equals(JavascriptBinaryCondition._5.getValueAsString())) {
      return JavascriptBinaryCondition._5;
    }
    if (value.equals(JavascriptBinaryCondition._6.getValueAsString())) {
      return JavascriptBinaryCondition._6;
    }
    return JavascriptBinaryCondition.getDefault();
  }
  private String myValue;
  JavascriptBinaryCondition(String name, String value) {
    this.myName = name;
    this.myValue = value;
  }
  public String getValue() {
    return this.myValue;
  }
}
