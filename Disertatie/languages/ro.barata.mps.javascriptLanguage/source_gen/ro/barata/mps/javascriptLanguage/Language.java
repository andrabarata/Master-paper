package ro.barata.mps.javascriptLanguage;

/*Generated by MPS */

import jetbrains.mps.smodel.language.LanguageRuntime;
import jetbrains.mps.smodel.adapter.ids.SLanguageId;
import java.util.UUID;
import java.util.Collection;
import jetbrains.mps.generator.runtime.TemplateModule;
import jetbrains.mps.generator.runtime.TemplateUtil;
import jetbrains.mps.smodel.runtime.LanguageAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConstraintsAspectDescriptor;
import jetbrains.mps.openapi.editor.descriptor.EditorAspectDescriptor;
import ro.barata.mps.javascriptLanguage.editor.EditorAspectDescriptorImpl;
import jetbrains.mps.smodel.runtime.StructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.TextGenAspectDescriptor;
import jetbrains.mps.smodel.runtime.interpreted.TextGenAspectInterpreted;

public class Language extends LanguageRuntime {
  public static String MODULE_REF = "d3ddb860-292b-4451-8638-cec4e3c81b18(ro.barata.mps.javascriptLanguage)";
  public Language() {
  }
  @Override
  public String getNamespace() {
    return "ro.barata.mps.javascriptLanguage";
  }

  @Override
  public int getVersion() {
    return 0;
  }

  public SLanguageId getId() {
    return new SLanguageId(UUID.fromString("d3ddb860-292b-4451-8638-cec4e3c81b18"));
  }
  @Override
  protected String[] getExtendedLanguageIDs() {
    return new String[]{"ro.barata.mps.htmlLanguage", "ro.barata.mps.databaseOperationsLanguage"};
  }
  @Override
  public Collection<TemplateModule> getGenerators() {
    return TemplateUtil.<TemplateModule>asCollection(TemplateUtil.createInterpretedGenerator(this, "2582660f-4a4d-42b3-b567-9d7e54daea92(ro.barata.mps.javascriptLanguage#3088814217694941832)"));
  }
  @Override
  protected <T extends LanguageAspectDescriptor> T createAspectDescriptor(Class<T> descriptorClass) {
    if (descriptorClass == ConstraintsAspectDescriptor.class) {
      return (T) new ro.barata.mps.javascriptLanguage.constraints.ConstraintsAspectDescriptor();
    }
    if (descriptorClass == EditorAspectDescriptor.class) {
      return (T) new EditorAspectDescriptorImpl();
    }
    if (descriptorClass == StructureAspectDescriptor.class) {
      return (T) new ro.barata.mps.javascriptLanguage.structure.StructureAspectDescriptor();
    }
    if (descriptorClass == TextGenAspectDescriptor.class) {
      return (T) new TextGenAspectInterpreted();
    }
    return super.createAspectDescriptor(descriptorClass);
  }
}
