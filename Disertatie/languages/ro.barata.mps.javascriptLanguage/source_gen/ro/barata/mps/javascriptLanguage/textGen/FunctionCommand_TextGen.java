package ro.barata.mps.javascriptLanguage.textGen;

/*Generated by MPS */

import jetbrains.mps.textGen.SNodeTextGen;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import jetbrains.mps.internal.collections.runtime.ListSequence;

public class FunctionCommand_TextGen extends SNodeTextGen {
  public void doGenerateText(SNode node) {
    this.append("function(");
    int i = 0;
    for (SNode parameter : SLinkOperations.getChildren(node, MetaAdapterFactory.getContainmentLink(0xd3ddb860292b4451L, 0x8638cec4e3c81b18L, 0x34756c9d9f722ad2L, 0x34756c9d9f74fc8fL, "parameters"))) {
      String param = parameter + (((i < ListSequence.fromList(SLinkOperations.getChildren(node, MetaAdapterFactory.getContainmentLink(0xd3ddb860292b4451L, 0x8638cec4e3c81b18L, 0x34756c9d9f722ad2L, 0x34756c9d9f74fc8fL, "parameters"))).count() - 1) ? "," : ""));
      this.append(param);
      i++;
    }
    this.append("){");
    this.appendNewLine();
    {
      Iterable<SNode> collection = SLinkOperations.getChildren(node, MetaAdapterFactory.getContainmentLink(0xd3ddb860292b4451L, 0x8638cec4e3c81b18L, 0x34756c9d9f722ad2L, 0x34756c9d9f722fb1L, "commands"));
      for (SNode item : collection) {
        appendNode(item);
      }
    }
    this.append("}");
    this.appendNewLine();
  }
}
