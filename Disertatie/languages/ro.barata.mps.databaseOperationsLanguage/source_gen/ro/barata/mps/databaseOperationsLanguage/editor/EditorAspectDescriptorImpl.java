package ro.barata.mps.databaseOperationsLanguage.editor;

/*Generated by MPS */

import jetbrains.mps.openapi.editor.descriptor.EditorAspectDescriptor;
import java.util.Collection;
import jetbrains.mps.openapi.editor.descriptor.ConceptEditor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Arrays;
import java.util.Collections;
import jetbrains.mps.openapi.editor.descriptor.ConceptEditorComponent;

public class EditorAspectDescriptorImpl implements EditorAspectDescriptor {

  public Collection<ConceptEditor> getEditors(ConceptDescriptor descriptor) {
    switch (Arrays.binarySearch(stringSwitchCases_xbvbvu_a0a0b, descriptor.getConceptFqName())) {
      case 0:
        return Collections.<ConceptEditor>singletonList(new BooleanValue_Editor());
      case 1:
        return Collections.<ConceptEditor>singletonList(new DBCommands_Editor());
      case 2:
        return Collections.<ConceptEditor>singletonList(new DeleteOperation_Editor());
      case 3:
        return Collections.<ConceptEditor>singletonList(new InsertOperation_Editor());
      case 4:
        return Collections.<ConceptEditor>singletonList(new Instance_Editor());
      case 5:
        return Collections.<ConceptEditor>singletonList(new IntValue_Editor());
      case 6:
        return Collections.<ConceptEditor>singletonList(new LinkDeclarationReference_Editor());
      case 7:
        return Collections.<ConceptEditor>singletonList(new PropertyReference_Editor());
      case 8:
        return Collections.<ConceptEditor>singletonList(new StringValue_Editor());
      case 9:
        return Collections.<ConceptEditor>singletonList(new UpdateOperation_Editor());
      default:
    }
    return Collections.<ConceptEditor>emptyList();
  }
  public Collection<ConceptEditorComponent> getEditorComponents(ConceptDescriptor descriptor, String editorComponentId) {
    return Collections.<ConceptEditorComponent>emptyList();
  }


  private static String[] stringSwitchCases_xbvbvu_a0a0b = new String[]{"ro.barata.mps.databaseOperationsLanguage.structure.BooleanValue", "ro.barata.mps.databaseOperationsLanguage.structure.DBCommands", "ro.barata.mps.databaseOperationsLanguage.structure.DeleteOperation", "ro.barata.mps.databaseOperationsLanguage.structure.InsertOperation", "ro.barata.mps.databaseOperationsLanguage.structure.Instance", "ro.barata.mps.databaseOperationsLanguage.structure.IntValue", "ro.barata.mps.databaseOperationsLanguage.structure.LinkDeclarationReference", "ro.barata.mps.databaseOperationsLanguage.structure.PropertyReference", "ro.barata.mps.databaseOperationsLanguage.structure.StringValue", "ro.barata.mps.databaseOperationsLanguage.structure.UpdateOperation"};
}
