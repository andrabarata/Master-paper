package ro.barata.mps.rootLanguage.editor;

/*Generated by MPS */

import jetbrains.mps.openapi.editor.descriptor.EditorAspectDescriptor;
import jetbrains.mps.openapi.editor.descriptor.EditorHintsProvider;
import java.util.Collection;
import jetbrains.mps.openapi.editor.descriptor.ConceptEditorHint;
import java.util.Arrays;
import jetbrains.mps.editor.runtime.desctiptor.ConceptEditorHintImpl;
import jetbrains.mps.openapi.editor.descriptor.ConceptEditor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collections;
import jetbrains.mps.openapi.editor.descriptor.ConceptEditorComponent;

public class EditorAspectDescriptorImpl implements EditorAspectDescriptor, EditorHintsProvider {

  private Collection<ConceptEditorHint> myHints = Arrays.<ConceptEditorHint>asList(new ConceptEditorHintImpl("Structural", "", true, "ro.barata.mps.rootLanguage.editor.StructuralHint.Structural"));
  public Collection<ConceptEditor> getEditors(ConceptDescriptor descriptor) {
    switch (Arrays.binarySearch(stringSwitchCases_xbvbvu_a0a0c, descriptor.getConceptFqName())) {
      case 0:
        return Collections.<ConceptEditor>singletonList(new Attribute_Editor());
      case 1:
        return Collections.<ConceptEditor>singletonList(new BooleanType_Editor());
      case 2:
        return Collections.<ConceptEditor>singletonList(new DatabaseSettings_Editor());
      case 3:
        return Collections.<ConceptEditor>singletonList(new Entity_Editor());
      case 4:
        return Collections.<ConceptEditor>singletonList(new EntityResource_Editor());
      case 5:
        return Collections.<ConceptEditor>singletonList(new EntityType_Editor());
      case 6:
        return Collections.<ConceptEditor>singletonList(new IntType_Editor());
      case 7:
        return Collections.<ConceptEditor>singletonList(new Module_Editor());
      case 8:
        return Collections.<ConceptEditor>singletonList(new SchemaCreator_Editor());
      case 9:
        return Collections.<ConceptEditor>singletonList(new StringType_Editor());
      default:
    }
    return Collections.<ConceptEditor>emptyList();
  }
  public Collection<ConceptEditorComponent> getEditorComponents(ConceptDescriptor descriptor, String editorComponentId) {
    return Collections.<ConceptEditorComponent>emptyList();
  }

  public Collection<ConceptEditorHint> getHints() {
    return myHints;
  }

  private static String[] stringSwitchCases_xbvbvu_a0a0c = new String[]{"ro.barata.mps.rootLanguage.structure.Attribute", "ro.barata.mps.rootLanguage.structure.BooleanType", "ro.barata.mps.rootLanguage.structure.DatabaseSettings", "ro.barata.mps.rootLanguage.structure.Entity", "ro.barata.mps.rootLanguage.structure.EntityResource", "ro.barata.mps.rootLanguage.structure.EntityType", "ro.barata.mps.rootLanguage.structure.IntType", "ro.barata.mps.rootLanguage.structure.Module", "ro.barata.mps.rootLanguage.structure.SchemaCreator", "ro.barata.mps.rootLanguage.structure.StringType"};
}
