package ro.barata.mps.boLanguage.sandbox;

/*Generated by MPS */

import java.sql.Statement;
import java.sql.SQLException;

public class SchemaGenerator {

  private static void generateTables(Statement stmt) throws SQLException, ClassNotFoundException {
    String sql = "";
    String primaryKey = "";

    primaryKey = "";
    primaryKey = "primary key(";
    primaryKey += "id";
    primaryKey += ")";
    sql = "create table " + "categories" + "(";
    sql += "id" + " " + "integer" + ",";
    sql += "name" + " " + "varchar(256)" + ",";
    sql += "parentId" + " " + "integer" + ",";
    sql += "categoryId" + " " + "integer" + ",";
    if (primaryKey.length() == 0) {
      sql = sql.substring(0, sql.length() - 1);
    }
    sql += primaryKey;
    sql += ")";
    System.out.println(sql);
    stmt.execute(sql);

    primaryKey = "";
    primaryKey = "primary key(";
    primaryKey += "id";
    primaryKey += ")";
    sql = "create table " + "products" + "(";
    sql += "id" + " " + "integer" + ",";
    sql += "name" + " " + "varchar(256)" + ",";
    sql += "description" + " " + "varchar(256)" + ",";
    sql += "units" + " " + "integer" + ",";
    sql += "price" + " " + "integer" + ",";
    sql += "categoryId" + " " + "integer" + ",";
    if (primaryKey.length() == 0) {
      sql = sql.substring(0, sql.length() - 1);
    }
    sql += primaryKey;
    sql += ")";
    System.out.println(sql);
    stmt.execute(sql);

    primaryKey = "";
    primaryKey = "primary key(";
    primaryKey += "id";
    primaryKey += ")";
    sql = "create table " + "discounts" + "(";
    sql += "id" + " " + "integer" + ",";
    sql += "subject" + " " + "varchar(256)" + ",";
    sql += "description" + " " + "varchar(256)" + ",";
    sql += "price" + " " + "integer" + ",";
    sql += "categoryId" + " " + "integer" + ",";
    if (primaryKey.length() == 0) {
      sql = sql.substring(0, sql.length() - 1);
    }
    sql += primaryKey;
    sql += ")";
    System.out.println(sql);
    stmt.execute(sql);

    primaryKey = "";
    primaryKey = "primary key(";
    primaryKey += "id";
    primaryKey += ")";
    sql = "create table " + "discountProducts" + "(";
    sql += "id" + " " + "integer" + ",";
    sql += "productId" + " " + "integer" + ",";
    sql += "promotionId" + " " + "integer" + ",";
    if (primaryKey.length() == 0) {
      sql = sql.substring(0, sql.length() - 1);
    }
    sql += primaryKey;
    sql += ")";
    System.out.println(sql);
    stmt.execute(sql);

    primaryKey = "";
    primaryKey = "primary key(";
    primaryKey += "id";
    primaryKey += ")";
    sql = "create table " + "attributeCategories" + "(";
    sql += "id" + " " + "integer" + ",";
    sql += "name" + " " + "varchar(256)" + ",";
    sql += "productId" + " " + "integer" + ",";
    if (primaryKey.length() == 0) {
      sql = sql.substring(0, sql.length() - 1);
    }
    sql += primaryKey;
    sql += ")";
    System.out.println(sql);
    stmt.execute(sql);

    primaryKey = "";
    primaryKey = "primary key(";
    primaryKey += "id";
    primaryKey += ")";
    sql = "create table " + "attributes" + "(";
    sql += "id" + " " + "integer" + ",";
    sql += "name" + " " + "varchar(256)" + ",";
    sql += "value" + " " + "varchar(256)" + ",";
    sql += "attributeCategoryId" + " " + "integer" + ",";
    if (primaryKey.length() == 0) {
      sql = sql.substring(0, sql.length() - 1);
    }
    sql += primaryKey;
    sql += ")";
    System.out.println(sql);
    stmt.execute(sql);

    primaryKey = "";
    primaryKey = "primary key(";
    primaryKey += "id";
    primaryKey += ")";
    sql = "create table " + "users" + "(";
    sql += "id" + " " + "integer" + ",";
    sql += "name" + " " + "varchar(256)" + ",";
    sql += "password" + " " + "varchar(256)" + ",";
    sql += "priviledge" + " " + "varchar(256)" + ",";
    sql += "userId" + " " + "integer" + ",";
    if (primaryKey.length() == 0) {
      sql = sql.substring(0, sql.length() - 1);
    }
    sql += primaryKey;
    sql += ")";
    System.out.println(sql);
    stmt.execute(sql);

    primaryKey = "";
    primaryKey = "primary key(";
    primaryKey += "id";
    primaryKey += ")";
    sql = "create table " + "persons" + "(";
    sql += "id" + " " + "integer" + ",";
    sql += "firstName" + " " + "varchar(256)" + ",";
    sql += "lastName" + " " + "varchar(256)" + ",";
    if (primaryKey.length() == 0) {
      sql = sql.substring(0, sql.length() - 1);
    }
    sql += primaryKey;
    sql += ")";
    System.out.println(sql);
    stmt.execute(sql);

    primaryKey = "";
    primaryKey = "primary key(";
    primaryKey += "id";
    primaryKey += ")";
    sql = "create table " + "adresses" + "(";
    sql += "id" + " " + "integer" + ",";
    sql += "line1" + " " + "varchar(256)" + ",";
    sql += "line2" + " " + "varchar(256)" + ",";
    sql += "postcode" + " " + "integer" + ",";
    sql += "state" + " " + "varchar(256)" + ",";
    sql += "country" + " " + "varchar(256)" + ",";
    sql += "city" + " " + "varchar(256)" + ",";
    sql += "personId" + " " + "integer" + ",";
    if (primaryKey.length() == 0) {
      sql = sql.substring(0, sql.length() - 1);
    }
    sql += primaryKey;
    sql += ")";
    System.out.println(sql);
    stmt.execute(sql);

    primaryKey = "";
    primaryKey = "primary key(";
    primaryKey += "id";
    primaryKey += ")";
    sql = "create table " + "orderItems" + "(";
    sql += "id" + " " + "integer" + ",";
    sql += "productId" + " " + "integer" + ",";
    sql += "promotionId" + " " + "integer" + ",";
    sql += "orderId" + " " + "integer" + ",";
    if (primaryKey.length() == 0) {
      sql = sql.substring(0, sql.length() - 1);
    }
    sql += primaryKey;
    sql += ")";
    System.out.println(sql);
    stmt.execute(sql);

    primaryKey = "";
    primaryKey = "primary key(";
    primaryKey += "id";
    primaryKey += ")";
    sql = "create table " + "orders" + "(";
    sql += "id" + " " + "integer" + ",";
    sql += "dateCreated" + " " + "integer" + ",";
    sql += "status" + " " + "varchar(256)" + ",";
    if (primaryKey.length() == 0) {
      sql = sql.substring(0, sql.length() - 1);
    }
    sql += primaryKey;
    sql += ")";
    System.out.println(sql);
    stmt.execute(sql);

  }
  private static void constrainTables(Statement stmt) throws SQLException, ClassNotFoundException {
    String sql = "";

    sql = "alter table " + "categories" + " add constraint fk_" + "categories" + "_" + "parentId";
    sql += " foreign key (" + "parentId" + ") references " + "categories" + "(" + "id" + ") on delete set null";
    System.out.println(sql);
    stmt.execute(sql);
    sql = "alter table " + "categories" + " add constraint fk_" + "categories" + "_" + "categoryId";
    sql += " foreign key (" + "categoryId" + ") references " + "categories" + "(" + "id" + ") on delete cascade";
    System.out.println(sql);
    stmt.execute(sql);

    sql = "alter table " + "products" + " add constraint fk_" + "products" + "_" + "categoryId";
    sql += " foreign key (" + "categoryId" + ") references " + "categories" + "(" + "id" + ") on delete cascade";
    System.out.println(sql);
    stmt.execute(sql);

    sql = "alter table " + "discounts" + " add constraint fk_" + "discounts" + "_" + "categoryId";
    sql += " foreign key (" + "categoryId" + ") references " + "categories" + "(" + "id" + ") on delete cascade";
    System.out.println(sql);
    stmt.execute(sql);

    sql = "alter table " + "discountProducts" + " add constraint fk_" + "discountProd" + "_" + "productId";
    sql += " foreign key (" + "productId" + ") references " + "products" + "(" + "id" + ") on delete set null";
    System.out.println(sql);
    stmt.execute(sql);
    sql = "alter table " + "discountProducts" + " add constraint fk_" + "discountProd" + "_" + "promotionId";
    sql += " foreign key (" + "promotionId" + ") references " + "discounts" + "(" + "id" + ") on delete cascade";
    System.out.println(sql);
    stmt.execute(sql);

    sql = "alter table " + "attributeCategories" + " add constraint fk_" + "attributeCat" + "_" + "productId";
    sql += " foreign key (" + "productId" + ") references " + "products" + "(" + "id" + ") on delete cascade";
    System.out.println(sql);
    stmt.execute(sql);

    sql = "alter table " + "attributes" + " add constraint fk_" + "attributes" + "_" + "attributeCat";
    sql += " foreign key (" + "attributeCategoryId" + ") references " + "attributeCategories" + "(" + "id" + ") on delete cascade";
    System.out.println(sql);
    stmt.execute(sql);

    sql = "alter table " + "users" + " add constraint fk_" + "users" + "_" + "userId";
    sql += " foreign key (" + "userId" + ") references " + "persons" + "(" + "id" + ") on delete set null";
    System.out.println(sql);
    stmt.execute(sql);
    sql = "alter table " + "adresses" + " add constraint fk_" + "adresses" + "_" + "personId";
    sql += " foreign key (" + "personId" + ") references " + "persons" + "(" + "id" + ") on delete cascade";
    System.out.println(sql);
    stmt.execute(sql);

    sql = "alter table " + "orderItems" + " add constraint fk_" + "orderItems" + "_" + "productId";
    sql += " foreign key (" + "productId" + ") references " + "products" + "(" + "id" + ") on delete set null";
    System.out.println(sql);
    stmt.execute(sql);
    sql = "alter table " + "orderItems" + " add constraint fk_" + "orderItems" + "_" + "promotionId";
    sql += " foreign key (" + "promotionId" + ") references " + "discounts" + "(" + "id" + ") on delete set null";
    System.out.println(sql);
    stmt.execute(sql);
    sql = "alter table " + "orderItems" + " add constraint fk_" + "orderItems" + "_" + "orderId";
    sql += " foreign key (" + "orderId" + ") references " + "orders" + "(" + "id" + ") on delete cascade";
    System.out.println(sql);
    stmt.execute(sql);

  }

  private static void dropTables(Statement stmt) throws ClassNotFoundException, SQLException {
    String sql = "";
    sql = "drop table " + "categories" + " cascade constraints";
    stmt.executeUpdate(sql);

    sql = "drop table " + "products" + " cascade constraints";
    stmt.executeUpdate(sql);

    sql = "drop table " + "discounts" + " cascade constraints";
    stmt.executeUpdate(sql);

    sql = "drop table " + "discountProducts" + " cascade constraints";
    stmt.executeUpdate(sql);

    sql = "drop table " + "attributeCategories" + " cascade constraints";
    stmt.executeUpdate(sql);

    sql = "drop table " + "attributes" + " cascade constraints";
    stmt.executeUpdate(sql);

    sql = "drop table " + "users" + " cascade constraints";
    stmt.executeUpdate(sql);

    sql = "drop table " + "persons" + " cascade constraints";
    stmt.executeUpdate(sql);

    sql = "drop table " + "adresses" + " cascade constraints";
    stmt.executeUpdate(sql);

    sql = "drop table " + "orderItems" + " cascade constraints";
    stmt.executeUpdate(sql);

    sql = "drop table " + "orders" + " cascade constraints";
    stmt.executeUpdate(sql);

  }

  public static void main(String[] args) throws ClassNotFoundException, SQLException {
    Statement stmt = DatabaseConnection.getConnection().createStatement();

    try {
      generateTables(stmt);
      constrainTables(stmt);
    } catch (Exception e) {
      e.printStackTrace();
    }
    stmt.close();

  }



}
