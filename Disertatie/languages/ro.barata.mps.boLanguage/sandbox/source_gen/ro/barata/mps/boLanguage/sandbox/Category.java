package ro.barata.mps.boLanguage.sandbox;

/*Generated by MPS */

import java.util.List;
import java.util.ArrayList;

public class Category {
  private Integer id;
  private String name;
  private List<Product> products;
  private List<Discount> discounts;
  private List<Category> categorys;
  private Category parentCategory;
  private Shop parentShop;
  public void setId(Integer attribute) {
    this.id = attribute;
  }
  public void setName(String attribute) {
    this.name = attribute;
  }
  public void setProducts(List<Product> entities) {
    this.products = entities;
  }
  public void setDiscounts(List<Discount> entities) {
    this.discounts = entities;
  }
  public void setCategorys(List<Category> entities) {
    this.categorys = entities;
  }
  public Integer getId() {
    return this.id;
  }
  public String getName() {
    return this.name;
  }
  public void setParentCategory(Category entity) {
    this.parentCategory = entity;
  }
  public void setParentShop(Shop entity) {
    this.parentShop = entity;
  }
  public List<Product> getProducts() {
    return this.products;
  }
  public List<Discount> getDiscounts() {
    return this.discounts;
  }
  public List<Category> getCategorys() {
    return this.categorys;
  }
  public Category getParentCategory() {
    return this.parentCategory;
  }
  public Shop getParentShop() {
    return this.parentShop;
  }
  public void addProduct(Product product) {
    if (products == null) {
      products = new ArrayList<Product>();
    }
    boolean flag = true;
    for (Product entity : products) {
    }
    if (flag) {
      this.products.add(product);
    }
  }
  public void addDiscount(Discount discount) {
    if (discounts == null) {
      discounts = new ArrayList<Discount>();
    }
    boolean flag = true;
    for (Discount entity : discounts) {
    }
    if (flag) {
      this.discounts.add(discount);
    }
  }
  public void addCategory(Category category) {
    if (categorys == null) {
      categorys = new ArrayList<Category>();
    }
    boolean flag = true;
    for (Category entity : categorys) {
    }
    if (flag) {
      this.categorys.add(category);
    }
  }
  public Category() {
  }
}
