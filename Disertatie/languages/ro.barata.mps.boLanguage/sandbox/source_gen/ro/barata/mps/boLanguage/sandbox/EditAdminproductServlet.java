package ro.barata.mps.boLanguage.sandbox;

/*Generated by MPS */

import javax.servlet.http.HttpServlet;
import java.sql.Connection;
import java.sql.SQLException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.ServletException;
import java.io.IOException;

public class EditAdminproductServlet extends HttpServlet {
  private Connection connection;
  public EditAdminproductServlet() throws SQLException, ClassNotFoundException, CloneNotSupportedException {
    if (connection == null) {
      connection = DatabaseConnection.getConnection();
    }
  }
  protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
    response.setContentType("text/html");
    response.setStatus(HttpServletResponse.SC_OK);
    try {
      response.getWriter().println("<!DOCTYPE html>");
      System.out.println("GET!");
      handleRequest(request, response);

    } catch (Exception ex) {
      ex.printStackTrace();
    }
  }
  protected void doPost(HttpServletRequest request, HttpServletResponse response) {
    try {
      handleRequest(request, response);
    } catch (Exception e) {
      e.printStackTrace();
    }
  }

  private void handleRequest(HttpServletRequest request, HttpServletResponse response) throws IOException, SQLException, ClassNotFoundException, CloneNotSupportedException {
    String action = request.getParameter("actionName");
    String requestParameterValue = "";
    if (request.getParameter("productId") != null) {
      requestParameterValue = request.getParameter("productId");
      request.getSession().setAttribute("productId", requestParameterValue);
    } else {
      requestParameterValue = request.getSession().getAttribute("productId").toString();
    }
    if (action != null && !(action.equals(""))) {
      if (action.equals("dbupdateProduct")) {
        dbupdateProduct(request, response, requestParameterValue);
      }
      if (action.equals("dbupdateCategory")) {
        dbupdateCategory(request, response, requestParameterValue);
      }

    } else {
      response.getWriter().println(EditAdminproductGenerator.getContent(request.getSession(), requestParameterValue));
    }
  }
  private void dbupdateProduct(HttpServletRequest request, HttpServletResponse response, String requestParameterValue) throws SQLException, ClassNotFoundException, IOException, CloneNotSupportedException {
    String value;
    String splitter;
    ProductDAO productDAO = new ProductDAO(connection);
    Product product = new Product();
    {
      Product newProduct = null;
      product = null;
      value = request.getParameter("id");
      if (value != null && !(value.equals(""))) {
        if (newProduct == null) {
          newProduct = new Product();
        }
        if (product == null) {
          product = new Product();
        }
        product.setId(Integer.parseInt(value));
        newProduct.setId(Integer.parseInt(value));
      }
      if (newProduct == null) {
        newProduct = new Product();
      }
      value = request.getParameter("productName");
      if (value != null && !(value.equals(""))) {
        newProduct.setProductName(value);

      }
      if (newProduct == null) {
        newProduct = new Product();
      }
      value = request.getParameter("description");
      if (value != null && !(value.equals(""))) {
        newProduct.setDescription(value);

      }
      if (newProduct == null) {
        newProduct = new Product();
      }
      value = request.getParameter("price");
      if (value != null && !(value.equals(""))) {
        newProduct.setPrice(Integer.parseInt(value));

      }
      if (newProduct == null) {
        newProduct = new Product();
      }
      value = request.getParameter("units");
      if (value != null && !(value.equals(""))) {
        newProduct.setUnits(Integer.parseInt(value));

      }
      if (newProduct == null) {
        newProduct = new Product();
      }
      value = request.getParameter("id");
      if (value != null && !(value.equals(""))) {
        newProduct.setId(Integer.parseInt(value));

      }
      if (product != null && newProduct != null) {
        productDAO.updateProduct(product, newProduct);
      }
    }

    response.getWriter().println(EditAdminproductGenerator.getContent(request.getSession(), requestParameterValue));

  }
  private void dbupdateCategory(HttpServletRequest request, HttpServletResponse response, String requestParameterValue) throws SQLException, ClassNotFoundException, IOException, CloneNotSupportedException {
    String value;
    String splitter;
    CategoryDAO categoryDAO = new CategoryDAO(connection);
    Category category = new Category();
    {
      Category newCategory = null;
      category = null;
      value = request.getParameter("id");
      if (value != null && !(value.equals(""))) {
        if (newCategory == null) {
          newCategory = new Category();
        }
        if (category == null) {
          category = new Category();
        }
        category.setId(Integer.parseInt(value));
        newCategory.setId(Integer.parseInt(value));
      }
      if (newCategory == null) {
        newCategory = new Category();
      }
      value = request.getParameter("id");
      if (value != null && !(value.equals(""))) {
        newCategory.setId(Integer.parseInt(value));

      }
      if (category != null && newCategory != null) {
        {
          Product product_0 = null;
          value = request.getParameter("childproducts");
          if (value != null && !(value.equals(""))) {
            if (product_0 == null) {
              product_0 = new Product();
            }
            product_0.setId(Integer.parseInt(value));
          }
          newCategory.addProduct(product_0);

        }
        categoryDAO.updateCategory(category, newCategory);
      }
    }

    response.getWriter().println(EditAdminproductGenerator.getContent(request.getSession(), requestParameterValue));

  }
}
