package ro.barata.mps.boLanguage.sandbox;

/*Generated by MPS */

import java.sql.Statement;
import java.sql.SQLException;
import java.util.List;
import java.util.ArrayList;
import java.sql.ResultSet;

public class ShopDAO {
  private Statement stmt;

  public ShopDAO() throws SQLException, ClassNotFoundException {
    stmt = DatabaseConnector.getConnection().createStatement();
  }

  public List<Shop> getAllShops() throws SQLException {
    List<Shop> shops = new ArrayList<Shop>();
    String sql = "select * from " + "ShopTable";
    ResultSet set = stmt.executeQuery(sql);
    Shop foundShop = new Shop();
    while (set.next()) {
      foundShop = new Shop();
      foundShop.setId(Integer.valueOf(set.getBigDecimal("id").intValue()));
      foundShop.setName(set.getString("name"));
      shops.add(foundShop);
    }
    return shops;
  }

  public Shop findById(String[] keys, String[] keyValues) throws SQLException {
    String sql = "select ";
    String columns = "";
    columns += "id";
    columns += ",";
    columns += "name";
    columns = ((columns.length() > 0) ? "(" + columns + ")" : columns);
    String values = "";
    for (int i = 0; i < keys.length; i++) {
      values += keys[i] + "=" + keyValues[i] + (((i < keys.length - 1) ? "," : ""));
    }
    if (values.length() > 0) {
      values = " where " + values;
    }
    sql += columns + "from" + "ShopTable" + values;
    ResultSet set = stmt.executeQuery(sql);
    List<Object> result = new ArrayList<Object>();
    int i = 0;
    while (set.next()) {
      result.add(set.getObject(i + 1));
      i++;
    }
    Shop shop = new Shop();
    i = 0;
    shop.setId((Integer) result.get(i));
    i++;
    shop.setName((String) result.get(i));
    i++;
    return shop;
  }


  public void addShop(Shop shop) throws SQLException {
    String sql = "insert into " + "ShopTable" + "(";
    String columns = "";
    String values = "";
    if (shop.getId() != null) {
      columns += "id" + ",";
      values += "'" + shop.getId() + "',";
    }
    if (shop.getName() != null) {
      columns += "name" + ",";
      values += "'" + shop.getName() + "',";
    }
    sql += columns.substring(0, columns.length() - 1) + ") values (" + values.substring(0, values.length() - 1) + ")";
    System.out.println(sql);
    stmt.execute(sql);
  }

  public void updateShop(Shop oldshop, Shop newshop) throws SQLException {
    String sql = "update " + "ShopTable" + " set ";
    String values = "";
    if (newshop.getId() != null) {
      values += "id" + "='" + newshop.getId() + "',";
    }
    if (newshop.getName() != null) {
      values += "name" + "='" + newshop.getName() + "',";
    }

    String condition = " where ";
    if (oldshop.getId() != null) {
      condition += "id" + "='" + oldshop.getId() + "' and ";
    }
    if (oldshop.getName() != null) {
      condition += "name" + "='" + oldshop.getName() + "' and ";
    }
    sql += values.substring(0, values.length() - 1) + condition.substring(0, condition.length() - 4);
    System.out.println(sql);
    stmt.execute(sql);

  }

  public void deleteShop(Shop shop) throws SQLException {
    String sql = "delete from " + "ShopTable" + " where";
    String condition = " ";
    if (shop.getId() != null) {
      condition += "id" + "='" + shop.getId() + "'";
      condition += " and ";
    }
    if (shop.getName() != null) {
      condition += "name" + "='" + shop.getName() + "'";
      condition += " and ";
    }
    sql += condition.substring(0, condition.length() - 5);
    System.out.println(sql);
    stmt.execute(sql);

  }

}
